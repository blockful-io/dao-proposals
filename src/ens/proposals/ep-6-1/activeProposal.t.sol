// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import { Test } from "@forge-std/src/Test.sol";
import { console2 } from "@forge-std/src/console2.sol";

import { IToken } from "@ens/interfaces/IToken.sol";
import { IGovernor } from "@ens/interfaces/IGovernor.sol";
import { ITimelock } from "@ens/interfaces/ITimelock.sol";
import { IERC20 } from "@contracts/utils/interfaces/IERC20.sol";

import { ENS_Governance } from "@ens/ens.t.sol";

interface IWithdraw {
    function withdraw() external;
}

contract Proposal_ENS_EP_6_1_Test is ENS_Governance {
    IWithdraw OldRegistrarController = IWithdraw(0x283Af0B28c62C092C9727F1Ee09c02CA627EB7F5);

    uint256 ETHbalanceBeforeRegistrar;

    uint256 ETHbalanceBeforeTimelock;
    uint256 expectedETHtransferTimelock = 6000 * 10 ** 18;

    address receiver = 0x02D61347e5c6EA5604f3f814C5b5498421cEBdEB; // TWAP Safe

    bytes proposalCalldata =
        hex"";

    function _selectFork() public override {
        vm.createSelectFork({ blockNumber: 21_723_989, urlOrAlias: "mainnet" });
    }

    function _proposer() public pure override returns (address) {
        return 0xb8c2C29ee19D8307cb7255e1Cd9CbDE883A267d5; // nick.eth
    }

    function _beforeProposal() public override {
        ETHbalanceBeforeTimelock = address(timelock).balance;
        ETHbalanceBeforeRegistrar = address(OldRegistrarController).balance;
    }

    function _generateCallData()
        public
        override
        returns (address[] memory, uint256[] memory, string[] memory, bytes[] memory, string memory)
    {
        (targets, values, calldatas, description) =
            abi.decode(proposalCalldata, (address[], uint256[], bytes[], string));

        bytes[] memory internalCalldatas = new bytes[](2);
        internalCalldatas[0] = new bytes(0);
        internalCalldatas[1] = abi.encodeWithSelector(OldRegistrarController.withdraw.selector);

        bytes memory expectedCalldata = abi.encode(targets, values, internalCalldatas, description);

        assertEq(calldatas, internalCalldatas);
        assertEq(proposalCalldata, expectedCalldata);

        return (targets, values, signatures, calldatas, description);
    }

    function _afterExecution() public view override {
        uint256 ETHbalanceAfterTimelock = address(timelock).balance;

        assertEq(
            ETHbalanceAfterTimelock, ETHbalanceBeforeTimelock + ETHbalanceBeforeRegistrar - expectedETHtransferTimelock
        );

        uint256 safeBalance = receiver.balance;
        assertEq(safeBalance, expectedETHtransferTimelock);

        uint256 registrarBalance = address(OldRegistrarController).balance;
        assertEq(registrarBalance, 0);
    }

    function _isProposalSubmitted() public pure override returns (bool) {
        return true;
    }
}
