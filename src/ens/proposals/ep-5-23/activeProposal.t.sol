// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import { Test } from "@forge-std/src/Test.sol";
import { console2 } from "@forge-std/src/console2.sol";

import { IToken } from "@ens/interfaces/IToken.sol";
import { IGovernor } from "@ens/interfaces/IGovernor.sol";
import { ITimelock } from "@ens/interfaces/ITimelock.sol";
import { IERC20 } from "@contracts/utils/interfaces/IERC20.sol";

import { ENS_Governance } from "@ens/ens.t.sol";

contract Proposal_ENS_EP_5_23_Test is ENS_Governance {
    IERC20 USDC = IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);
    IERC20 ENS = IERC20(0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72);

    uint256 USDCbalanceBefore;
    uint256 expectedUSDCtransfer = 100_000 * 10 ** 6; // USDC decimals
    uint256 USDCbalanceAfter;

    uint256 ENSbalanceBefore;
    uint256 expectedENStransfer = 15_000 * 10 ** 18; // ENS decimals
    uint256 ENSbalanceAfter;

    address receiver = 0x91c32893216dE3eA0a55ABb9851f581d4503d39b;

    bytes proposalCalldata = hex"";

    function _selectFork() public override {
        vm.createSelectFork({ blockNumber: 21_089_400, urlOrAlias: "mainnet" });
    }

    function _proposer() public view override returns (address) {
        return 0x76A6D08b82034b397E7e09dAe4377C18F132BbB8;
    }

    function _beforeExecution() public override {
        USDCbalanceBefore = USDC.balanceOf(address(timelock));
        ENSbalanceBefore = ENS.balanceOf(address(timelock));
    }

    function _generateCallData()
        public
        override
        returns (
            address[] memory,
            uint256[] memory,
            string[] memory,
            bytes[] memory,
            string memory
        )
    {
         (targets, values, calldatas, description) =
            abi.decode(proposalCalldata, (address[], uint256[], bytes[], string));

        bytes[] memory internalCalldatas = new bytes[](2);
        internalCalldatas[0] = abi.encodeWithSelector(USDC.transfer.selector, receiver, expectedUSDCtransfer);
        internalCalldatas[1] = abi.encodeWithSelector(ENS.transfer.selector, receiver, expectedENStransfer);
        
        bytes memory expectedCalldata = abi.encode(
            targets,
            values,
            internalCalldatas,
            description
        );

        assertEq(calldatas, internalCalldatas);
        assertEq(proposalCalldata, expectedCalldata);

        return (targets, values, signatures, calldatas, description);
    }

    function _afterExecution() public override {
        USDCbalanceAfter = USDC.balanceOf(address(timelock));
        assertEq(USDCbalanceBefore, USDCbalanceAfter + expectedUSDCtransfer);
        assertNotEq(USDCbalanceAfter, USDCbalanceBefore);

        ENSbalanceAfter = ENS.balanceOf(address(timelock));
        assertEq(ENSbalanceBefore, ENSbalanceAfter + expectedENStransfer);
        assertNotEq(ENSbalanceAfter, ENSbalanceBefore);
    }

    function _isProposalSubmitted() public view override returns (bool) {
        return true;
    }
}
